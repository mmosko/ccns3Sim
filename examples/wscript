## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# Copyright (c) 2016, Xerox Corporation (Xerox) and Palo Alto Research Center, Inc (PARC)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL XEROX OR PARC BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ################################################################################
# #
# # PATENT NOTICE
# #
# # This software is distributed under the BSD 2-clause License (see LICENSE
# # file).  This BSD License does not make any patent claims and as such, does
# # not act as a patent grant.  The purpose of this section is for each contributor
# # to define their intentions with respect to intellectual property.
# #
# # Each contributor to this source code is encouraged to state their patent
# # claims and licensing mechanisms for any contributions made. At the end of
# # this section contributors may each make their own statements.  Contributor's
# # claims and grants only apply to the pieces (source code, programs, text,
# # media, etc) that they have contributed directly to this software.
# #
# # There is no guarantee that this section is complete, up to date or accurate. It
# # is up to the contributors to maintain their portion of this section and up to
# # the user of the software to verify any claims herein.
# #
# # Do not remove this header notification.  The contents of this section must be
# # present in all distributions of the software.  You may only modify your own
# # intellectual property statements.  Please provide contact information.
#
# - Palo Alto Research Center, Inc
# This software distribution does not grant any rights to patents owned by Palo
# Alto Research Center, Inc (PARC). Rights to these patents are available via
# various mechanisms. As of January 2016 PARC has committed to FRAND licensing any
# intellectual property used by its contributions to this software. You may
# contact PARC at cipo@parc.com for more information or visit http://www.ccnx.org

def build(bld):
    ####
    obj = bld.create_ns3_program('ccnx-simple',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-simple.cc'

    ####
    obj = bld.create_ns3_program('ccnx-csma-consumer-producer',
                                 ['network', 'ccns3Sim', 'applications', 'csma'])
    obj.source = 'ccnx-csma-consumer-producer.cc'

    ####
    obj = bld.create_ns3_program('ccnx-2node',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-2node.cc'
    
    ####
    obj = bld.create_ns3_program('ccnx-lossy-link',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-lossy-link.cc'

    ####
    obj = bld.create_ns3_program('ccnx-nfp-routing',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point', 'csma'])
    obj.source = 'ccnx-nfp-routing.cc'


    ####
    obj = bld.create_ns3_program('ccnx-nfp-routing-12node',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point', 'csma'])
    obj.source = 'ccnx-nfp-routing-12node.cc'

    ####
    obj = bld.create_ns3_program('ccnx-csma-simple',
                                 ['network', 'ccns3Sim', 'applications', 'csma'])
    obj.source = 'ccnx-csma-simple.cc'

    ####
    obj = bld.create_ns3_program('ccnx-tracing',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-tracing.cc'
    
    ####
    obj = bld.create_ns3_program('ccnx-consumer-producer',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-consumer-producer.cc'
    
 ####
    obj = bld.create_ns3_program('ccnx-multi-prefix-producer-consumer',
                                 ['network', 'ccns3Sim', 'applications', 'csma'])
    obj.source = 'ccnx-multi-prefix-producer-consumer.cc'
    
   
 ####
    obj = bld.create_ns3_program('ccnx-4node-topo',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-4node-topo.cc'
    
 ####
    obj = bld.create_ns3_program('ccnx-6node-topo',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-6node-topo.cc'
    
####
    obj = bld.create_ns3_program('ccnx-layer-delays',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-layer-delays.cc'
####
    obj = bld.create_ns3_program('ccnx-2node-withperhopheaders',
                                 ['network', 'ccns3Sim', 'applications', 'point-to-point'])
    obj.source = 'ccnx-2node-withperhopheaders.cc'
    
